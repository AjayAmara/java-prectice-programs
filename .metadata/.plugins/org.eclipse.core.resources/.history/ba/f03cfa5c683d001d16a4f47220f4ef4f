package leetCode;

class ListNode {
	int val;
	ListNode next;

	ListNode() {}

	ListNode(int val) {
		this.val = val;
	}

	ListNode(int val, ListNode next) {
		this.val = val;
		this.next = next;
	}
}

public class AddTwoNumberd {
	/*
	 * Input: 
	 *     l1 = [2,4,3], 
	 *     l2 = [5,6,4] 
	 *     
	 * Output:  [7,0,8] 
	 * Explanation: 342 + 465 = 807.
	 */
	public ListNode addTwoNumbers(ListNode l1, ListNode l2) {

		ListNode dummyHead = new ListNode(0);
		ListNode curr = dummyHead;
		int carry = 0;
		while (l1 != null || l2 != null || carry != 0) {
			int x = (l1 != null) ? l1.val : 0;
			int y = (l2 != null) ? l2.val : 0;
			int sum = carry + x + y;
			carry = sum / 10;
			curr.next = new ListNode(sum % 10);
			curr = curr.next;
			if (l1 != null)
				l1 = l1.next;
			if (l2 != null)
				l2 = l2.next;
		}
		return dummyHead.next;

	}
	public static void main(String[] args) {
		AddTwoNumberd addTwoNumberd=new AddTwoNumberd();
		int[] arr1= {2,4,3};
		int[] arr2= {5,6,4};
		
		int arritr=arr1.length>arr2.length?arr1.length:arr2.length;
		int[] arrres=new int[arritr];
		
		for(int i=0;i<arritr;i++) {
		ListNode ln= new ListNode(i);
		ListNode ln1= new ListNode(i);
		arrres[i]=addTwoNumberd.addTwoNumbers(ln, ln1).val;
		}
		for(int j=0;j<arrres.length;j++) {
		System.out.println(arrres[j]);
		}
		
	}

}
